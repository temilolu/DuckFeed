{"version":3,"sources":["components/Header.js","components/Item.js","components/ItemList.js","components/PostForm.js","components/Pagination.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","className","height","viewBox","width","xmlns","id","d","transform","Item","_ref","items","feedTime","foodName","location","numberOfDucks","foodType","foodQuantity","ItemList","loading","map","item","components_Item","key","_id","initialState","foodNameError","locationError","numberOfDucksError","foodTypeError","foodQuantityError","PostForm","state","changeHandler","e","_this","setState","Object","defineProperty","target","name","value","validate","submitHandler","preventDefault","axios","post","then","response","console","log","catch","error","_this$state","this","onSubmit","htmlFor","type","placeholder","onChange","Component","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","number","onClick","App","_useState","useState","_useState2","slicedToArray","posts","setPosts","_useState3","_useState4","setLoading","_useState5","_useState6","currentPage","setCurrentPage","_useState7","useEffect","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","get","sent","data","stop","apply","arguments","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","components_Header","components_PostForm","components_ItemList","components_Pagination","length","pageNumber","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.655c669a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n\t<React.Fragment>\n\t\t<nav className=\"flex items-center justify-between flex-wrap bg-teal-500 p-6\">\n\t\t\t<div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n\t\t\t\t<svg\n\t\t\t\t\tclassName=\"fill-current h-8 w-8 mr-2\"\n\t\t\t\t\theight=\"60\"\n\t\t\t\t\tviewBox=\"0 0 60 60\"\n\t\t\t\t\twidth=\"60\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\tid=\"Shape\"\n\t\t\t\t\t\td=\"m59.861 45.5h.005l-17.557-30.5h16.691c.4404522.0003206.829252-.2875769.9574398-.7089629.1281879-.4213859-.0344238-.8770258-.4004398-1.1220371l-17.92-12c-.4240468-.28466283-.9944603-.20403748-1.323.187-11.014 13.115-10.333 12.124-10.314 12.693.012.237-.344-.806 6.029 16.57l-24.668-9.552c-.3730676-.1447469-.7965043-.0531533-1.0763994.2328359-.2798951.2859893-.36234828.7113003-.2096006 1.0811641l5.675 13.775-14.55-2.968c-.41771024-.0850946-.84344164.1039672-1.06040649.470913-.21696486.3669458-.17745668.8310909.09840649 1.156087l22 25.833c.1900798.2234143.468667.3521055.762.352h24c.2919624-.0002729.5692245-.1281276.759-.35l12-14c.2798477-.3206277.3210463-.7851225.102-1.15zm-21.039 7.27-31.068-16.204 47.716 9.734zm2.447-49.44 14.44 9.67h-22.563zm-1.269 11.67 17.028 29.577-14.86-3.031-9.736-26.546zm-.136 26.076-7.228-1.476-16.712-14.621 21.023 8.14zm-26.317-15.519 15.128 13.236-10.563-2.155zm-8.447 11.879 31.247 16.3-13.047 5.075zm41.44 21.564h-18.211l27.317-10.623z\"\n\t\t\t\t\t\ttransform=\"translate(0 -1)\"\n\t\t\t\t\t/>\n\t\t\t\t</svg>\n\n\t\t\t\t<span className=\"font-semibold text-xl tracking-tight\">DuckFeed</span>\n\t\t\t</div>\n\t\t</nav>\n\t</React.Fragment>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Item = ({items}) => {\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"py-4\">\n\t\t\t\t<div className = \"max-w-lg rounded overflow-hidden shadow bg-white\" >\n\t\t\t\t\t<div className = \"px-6 py-4\" >\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>< span className = \"py-1 text-xs text-green-500\" > Time: {items.feedTime} </span></li>\n\t\t\t\t\t\t\t<li>< span className = \"py-1 text-xs \"> Food name: </span> <span className = \"text-gray-700 font-mono text-sm pl-4\"> {items.foodName} </span></li>\n\t\t\t\t\t\t\t<li>< span className = \"py-1 text-xs \"> Location: </span> <span className = \"text-gray-700 font-mono text-sm pl-4\"> {items.location} </span></li>\n\t\t\t\t\t\t\t<li>< span className = \"py-1 text-xs \"> Number of Ducks: </span> <span className = \"text-gray-700 font-mono text-sm pl-4\"> {items.numberOfDucks} </span></li>\n\t\t\t\t\t\t\t<li>< span className = \"py-1 text-xs \"> Food Type: </span> <span className = \"text-gray-700 font-mono text-sm pl-4\"> {items.foodType} </span></li>\n\t\t\t\t\t\t\t<li>< span className = \"py-1 text-xs \"> Food Quantity: </span> <span className = \"text-gray-700 font-mono text-sm pl-4\"> {items.foodQuantity} </span></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t)\n}\n\nexport default Item\n\n\nItem.propTypes = {\n\tfeedTime: PropTypes.string,\n\tfeedName: PropTypes.string,\n\tlocation: PropTypes.string,\n\tnumberOfDucks: PropTypes.string,\n\tfoodType: PropTypes.string,\n\tfoodQuantity: PropTypes.string\n}\n","import React from 'react';\nimport Item from '../components/Item';\n\nconst ItemList = ({items, loading}) => {\n\tif (loading) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n\t\t\t<React.Fragment>\n\t\t\t\t<ul className=\"list-inside\">{items.map(item => <Item key={item._id} items={item} />)}</ul>\n\t\t\t</React.Fragment>\n\t\t);\n}\n\nexport default ItemList;\n\n\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst initialState = {\n\tfoodName: '',\n\tlocation: '',\n\tnumberOfDucks: '',\n\tfoodType: '',\n\tfoodQuantity: '',\n\tfoodNameError: '',\n\tlocationError: '',\n\tnumberOfDucksError: '',\n\tfoodTypeError: '',\n\tfoodQuantityError: ''\n};\n\nclass PostForm extends Component {\n\tstate = initialState;\n\n\tchangeHandler = e => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\n\tvalidate = () => {\n\t\tlet foodNameError = '';\n\t\tlet locationError = '';\n\t\tlet numberOfDucksError = '';\n\t\tlet foodTypeError = '';\n\t\tlet foodQuantityError = '';\n\n\t\tif (!this.state.foodName) {\n\t\t\tfoodNameError = 'Food name cannot be blank';\n\t\t}\n\t\tif (!this.state.location) {\n\t\t\tlocationError = 'Location cannot be blank';\n\t\t}\n\t\tif (!this.state.numberOfDucks) {\n\t\t\tnumberOfDucksError = 'Number of Ducks cannot be blank';\n\t\t}\n\n\t\tif (!this.state.foodType) {\n\t\t\tfoodTypeError = 'Food type cannot be blank';\n\t\t}\n\n\t\tif (!this.state.foodQuantity) {\n\t\t\tfoodQuantityError = 'Food Quantity cannot be blank';\n\t\t}\n\n\t\tif (foodNameError || locationError || numberOfDucksError || foodTypeError || foodQuantityError) {\n\t\t\tthis.setState({ foodNameError, locationError, numberOfDucksError, foodTypeError, foodQuantityError });\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t};\n\n\tsubmitHandler = e => {\n\t\te.preventDefault();\n\t\tconst url = 'https://duckfeedapps.herokuapp.com/api/post';\n\t\taxios\n\t\t\t.post(url, this.state)\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(response);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t\tconsole.log(this.state);\n\n\t\tconst isValid = this.validate();\n\t\tif (isValid) {\n\t\t\tconsole.log(this.state);\n\n\t\t\t// Clear form\n\t\t\tthis.setState(initialState);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { foodName, location, numberOfDucks, foodType, foodQuantity } = this.state;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"py-4\">\n\t\t\t\t\t<div className=\"max-w-lg rounded overflow-hidden shadow bg-white\">\n\t\t\t\t\t\t<div className=\"px-6 py-4\">\n\t\t\t\t\t\t\t<div className=\"font-bold text-xl mb-2 text-center\">+ Add Fed Post</div>\n\t\t\t\t\t\t\t<div className=\"w-full max-w-xs\">\n\t\t\t\t\t\t\t\t<form className=\"bg-white rounded px-8 pt-6 pb-8 mb-4\" onSubmit={this.submitHandler}>\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"block text-gray-700 text-sm font-bold mb-2\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"foodName\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tFood Name\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={foodName}\n\t\t\t\t\t\t\t\t\t\t\tname=\"foodName\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Food Name\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-xs text-red-600\">{this.state.foodNameError}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"block text-gray-700 text-sm font-bold mb-2\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"location\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tLocation\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={location}\n\t\t\t\t\t\t\t\t\t\t\tname=\"location\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Location\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-xs text-red-600\">{this.state.locationError}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"block text-gray-700 text-sm font-bold mb-2\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"numberOfDucks\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tNumber of Ducks\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={numberOfDucks}\n\t\t\t\t\t\t\t\t\t\t\tname=\"numberOfDucks\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Number of Ducks\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-xs text-red-600\">{this.state.numberOfDucksError}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"block text-gray-700 text-sm font-bold mb-2\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"foodType\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tFood Type\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={foodType}\n\t\t\t\t\t\t\t\t\t\t\tname=\"foodType\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Food Type\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-xs text-red-600\">{this.state.foodTypeError}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"block text-gray-700 text-sm font-bold mb-2\"\n\t\t\t\t\t\t\t\t\t\t\thtmlFor=\"foodQuantity\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tFood Quantity\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={foodQuantity}\n\t\t\t\t\t\t\t\t\t\t\tname=\"foodQuantity\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Food Quantity\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.changeHandler}\n\t\t\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-xs text-red-600\">{this.state.foodQuantityError}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"flex items-center justify-between\">\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd Post\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default PostForm;\n","import React from 'react';\n\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className='inline-flex py-4'>\n        {pageNumbers.map(number => (\n          <li key={number} className='page-item'>\n            <button onClick={() => paginate(number)} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mx-1\">\n              {number}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;","import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport Header from './components/Header';\nimport ItemList from './components/ItemList';\nimport PostForm from './components/PostForm';\nimport axios from 'axios';\nimport Pagination from './components/Pagination';\n\nconst App = () => {\n\tconst [posts, setPosts] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [postsPerPage] = useState(5);\n\n\tuseEffect(() => {\n\t\tconst fetchPosts = async () => {\n\t\t\tsetLoading(true);\n\t\t\tconst res = await axios.get('https://duckfeedapps.herokuapp.com/api/post');\n\t\t\tsetPosts(res.data);\n\t\t\tsetLoading(false);\n\t\t};\n\n\t\tfetchPosts();\n\t}, []);\n\n\t // Get current posts\n\tconst indexOfLastPost = currentPage * postsPerPage;\n\tconst indexOfFirstPost = indexOfLastPost - postsPerPage;\n\tconst currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n\t// Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"container mx-auto \">\n\t\t\t\t\t<Header />\n\t\t\t\t\t<main className=\"px-10  bg-gray-200\">\n\t\t\t\t\t\t<div className=\"flex flex-wrap bg-gray-200\">\n\t\t\t\t\t\t\t<div className=\"w-2/5 p-2\">\n\t\t\t\t\t\t\t\t<div className=\"p-2\">\n\t\t\t\t\t\t\t\t\t<PostForm />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"w-3/5 p-2\">\n\t\t\t\t\t\t\t\t<div className=\"p-2\">\n\t\t\t\t\t\t\t\t\t<ItemList items={currentPosts} loading={loading}/>\n\n\t\t\t\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\t\t\t\tpostsPerPage={postsPerPage}\n\t\t\t\t\t\t\t\t\t\ttotalPosts={posts.length}\n\t\t\t\t\t\t\t\t\t\tpaginate={paginate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}